Memory Management #3.weak

3. もしweakで作った変数がいるが、それがヒップにいることに何の関心がなければ、ヒップでそのまま除去することもあるという話になる、そしてnilに設定するという意味だ、これは、まる
で、ヒップにあるものを指差してはいるが、あまり関心がなくて消えてしまうとそのままnilに設定するという意味と同様で、それはOptional(オプショナル)ポインタでなければならないとい
う意味だ。 Weakは、オプショナルタイプの参照ポインタにだけ適用されるという意味で、基本的にクラスに対するオプショナルポインタだ。特に、weakポインタは、ヒップにいかなるものも保
存しないのに、ヒップに保存するstrongとは異なる。

-  計算機アプリでUILableを示すためのOutletがあった。しかし、なぜweakにさせたのか。なぜならビューの階層で、例えば、UILableの上位ビューは、UILableについてstrongポイ
ンタを持っていたためだ、それで敢えてoutletをヒップの中に入れておかないもなったのだ。なぜならビュー階層によって知ってヒップに保管がなるから、でも、ビュー階層がそのUILabelを除去しちゃったら、再び話し、これ以上ビューの一部ではないようになったらたぶんoutletとしての関心が消えることになる、それで、その時はoutletがnilに設定されるように置くのだ

- 内容が難しいが、これは、また、メモリーの周期と関連のある内容だからもう一度見るようにする
