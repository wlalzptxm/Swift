Closures #1.深化

1.クローザーはインライン関数(inlinefunction)であり、ヒップメモリーの中に保存されるということだ、それでクローザーは基本的に参照(reference)タイプの関数であり、 関数
はスイフトで一般タイプであるため、クローザーはヒップに保存され、クローザーが運営される方式で興味深い結果が導かれる。それはクローザー内部でその周辺にある範囲内のすべての変数を
参照できるという点ですが、これが可能なのはインライン関数という理由のためだです、なので、地域変数を参照することができるようになり、それがインスタンス変数でもクラスのプロパティ
であれ、クルロジョに宣言したメソッドの中にいたらこのすべてに接近することが完璧に認められることになる。これは単純に接近だけをするのではなく、読んで使うこともできる、クローザーは
こうやっで長期間存在できるようになる。例えば、計算機で行ったことのようにDictionaryに入れることもできて、そのDictionaryは長い間存在することができてクローザーは継続して取
り出されたり、呼び出しされるということだ

2. それで、地域変数を入れる時何が起きたり、地域変数を入れるクローザーの一つにローカル変数をキャプチャーすると、その地域変数も記録されなければならないが、スイフトがこのような
ものを自動的に行うということと、クローザーの中でキャプチャができている全てのものはすでにヒップの中にいたらクローザーからstrongポインタを持って、そうでなければヒップに運ばれる
ようになっているが、それですべてのものがヒプアンにされることになる。
