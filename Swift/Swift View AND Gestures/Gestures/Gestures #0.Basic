Gestures #0.기초

1. 제스처라는 것은 화면을 통해 전달된 사용자의 입력이다.화면 위에 올려진 모든 손가락의 위치와 운동을 알 수 있는데 API를 통해 이루어 지진 않는다, 왜냐하면 스와이프나 
핀치처럼 또는 팬을 한다던지 모든 것이 제스처가 될 수 있기 때문이다. 결국 IOS에는 사용자의 입력을 제스처로 인식하는 추상 레이어가 있어 제스처를 미리 정의해서 무언가를 
하게 하는 것이다. 그 제스처가 실제로 발생하거나 그것이 미리 정의된 제스처인지 판단하면서 말이다

- 제스처는 ios의 api로 이루어지지 않는다, 다만 미리 정의한 제스처가 실제로 발생하거나 미리 정의된 제스처가 맞는지 판단만 할 뿐이다

2. 위의 방법의 좋은 점은 스와이프(쓸어내기)는 모든 앱에서 같은 것으로 인식된다는 것이다 예를 들어 속도라던지 방향이라던지 얼마나 길게 하는지 등은 모든 앱에서 똑같이 
입력되기 때문에 개발자가 직접 제스처(스와이프 등을)만든다면 사용자가 화면을 넘길만큼 스와이프를 충분히 빠르게 했는지 아니면 이게 팬을 한건 아닌지 일일이 확인해야할 것이
다 이 모든 로직을 구현해야 하며, 직접 구현하는 것은 매우 힘든 작업이고 앱사이에서 일정하지도 못할 것이다

- 예를 들어 스와이프(쓸어내기)는 모든 앱에서 같은 것으로 인식되도록 IOS에서 미리 구현해놓은 것이 그것이다

3. 제스처는 IOS에서 UIGestureRecognizer라는 클래스의 인스턴스에 의해 인식된다 좋은 이름이지만 UIGestureRecognize 자체는 추상적이며 직접 
UIGestureRecognize를 생성할 일은 없을 것이다, 대신 UIGestureRecognize를 상속받는 클래스가 여럿 있으며 원하는 제스처 종류를 쓰려고 서브클래스들을 생성하게 
될 것이다. 예컨데 팬을 인식하는 PanGestureRecognize, 핀치를 인식하는 PinchGestureRecognize 같은 말이다

- 따라서 미리 정의된 PanGestureRecognize등을 쓰게 될테고 직접 생성할 일은 없을 것이다

4. 이런 Recognizer 클래스를 쓰고 싶다면 2가지 파트가 있는데 하나는 어떤 UIView객체가 이 Recognizer를 받아서 해당하는 제스처를 인식할 수 있도록 해야 하고 그
래서 제스처를 인식하는 파트가 있는 것이다 RestureRecognizer를 생성하면 인식하게 되는데, View에게 이 RestureRecognizer를 사용하라고 요청하게 되는 것이다

- Recognizer클래스를 쓰고 싶다면 UIView객체가 이 Recognizer를 받아서 해당하는 제스처를 인식할 수 있도록 RestureRecognizer를 생성하게 된다

5. 오직 View만 제스처를 인식할 수 있고 Controller는 불가능하며 Controller는 제스처를 인식할 수 없고 오로지 View만이 가능할 뿐이다
