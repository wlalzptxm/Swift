Initialization #Customizing 

1. もし私だけのinitを作り始めたら自動initは使ってはならない
- 初期化が終わったら必ず,すべてのプロパティは値を持っていなければならない!

#convenienceinit(便宜初期化)&designated(指定初期化)

2.親クラスを呼び出す前に必ず子クラスの初期化親クラスが初期化するようにsuper.initを呼ぶ前まですべてのプロパティを初期化しておくべきこと
- つまり、どのような仕事をして親クラスを呼んでからその後にプロパティにアクセスすることができる、プロパティにアクセスする前に初期化する

3.convenience(便宜の初期化関数)クラスの中で便宜のinitや指定initを呼び出して初期化しなければならない、親クラスの初期化関数を呼べない
- Convenienceクラスはプロパティ値を設定する前に親クラスにある初期化関数を先に呼び出ししなければならない
- だからdesignatedクラスは自分のプロパティを先に初期化後親を呼んで初期化

4.convenienceinit(方の初期化)&designated(指定初期化)を使うことを推奨しない
- 考えなきゃならないことがとても多くなる
