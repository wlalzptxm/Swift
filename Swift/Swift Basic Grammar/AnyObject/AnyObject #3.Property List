AnyObject #사용방법 2. 프로퍼티 리스트

1. Property List는 기본적으로 Array, Dictionary, String, Double, Int, NSData, NSDate의 조합으로 되어있다, 이 클래스들로 데이터 구조를 만들면 
Property List가 생기는 것이다. 그러니까 이건 그냥 그걸 표현하기 위한 단어일뿐이다

2. Array, Dictionary, String, Double은 구조체인데 어떻게 클래스만 받는 AnyObject가 이것들을 받는가? 정답은 ‘브리징’이다, 이것들은 자동으로 
Objective-C로 브리징되고 클래스인 NSD,NSA,NSN로 보정받으면서 AnyObject가 되도록 허락되는 것이다

3. 중요한점은 Property List는 보이지 않게 전달된다는 점인데 그 안을 보는 사람은 Dictionary, Array, String같은게 있다는 것만 알고 데이터가 무엇을 의미하는
지는 아무도 모르게 된다,그저 전달되기만 한다는 점이다, 예컨데 NSUserDefault라는게 있는데

- NSUserDefault가 하는 일은 Property List를 받아서 디스크에 영구적으로 기억되게 만든다, 그래서 앱을 종요했다가 다시 켜서 봐도 그대로 있는 것이다, 그러니까 기
본적으로 Property의 데이터베이스인 셈이다

- Array, Dictionary, String, Date 구조체의 데이터모음인 것이다, 하지만 이는 적은 량의 데이터베이스인 셈임으로 영어사전과 같이 영어 전체를 저장해야하는 큰 데
이터에는 사용할 수 없다. 그냥 설정(setting)같은 곳만 사용하는 것을 추천한다

setObject(AnyObject, forKey: String)
objectForKey(String) -> AnyObject?
arrayForKey(String) -> Array<AnyObject>? //return nil if you setObject(not-an-array)

- setObject(AnyObject, forKey: String) 이런식으로 Property List를 저장하고 다시 가져올 수도 있다는 말이다, 즉 forKey안에 String이 있다는 것만 알지 
구체적으로 무슨 데이터가 있는지 모른다는 뜻

setDouble(Double, forKey: String)
doubleForKey(String) -> Double

- Double로 만들수도 있는데 왜냐하면 Double 자체가 Property List이기 때문이다,  Array처럼 이 클래스들 중 하나니까  
