# Swift API 구성 - 스위프트 공식사이트 번역

1. Welcome to Swift

Swift는 소프트웨어들, 폰, 데스크탑, 서버 그밖에 모든것을 실행하는 코딩에 대한 방법이 굉장하다 그리고 안전하고, 빠르며, 애플의 엔지니어적 문화와 오픈소스 커뮤니티에서 전달된 기부금 등으로 결합된 최고의 양방향 프로그래밍 언어적 모뎀이라 생각하며, 최적화된 퍼포먼스, 최신 기술 등 어느것에 치우처지지 않은 컴파일러이다

Swift는 새로운 프로그래머들에게 친절하다. 이는 프로그래밍 언어의 산업적 품질을 말한다, 풍부한 표현력과 즐거움으로 점칠된 언어, Swift 코딩은 당신을 경험과 즉각적인 결과물을 가져다 줄것이며, 앱을 실행할때의 오버헤드를 줄여줄 것이다.

Swift는 현대적 프로그래밍 패턴에 대한 일반적 프로그래밍 에러에 대해 크게 정의하고 있다.

    a) 변수를 쓰기전에 항상 초기화 한다.
    b) 배열 지수는 out-of-bounds 에러가 존재하는지 체크한다
    c) 정수형에 오버플로우가 존재하는지 체크한다.
    d) nil값은 명시적으로 선택적 처리할 수 있도록한다
    e) 메모리는 자동적으로 관리된다
    f) 오류 처리시 예상치 못한 실패로부터 통제된 회복을 허용한다.

Swift 코드는 하드웨어적 모뎀에서 벗어난 최적화된 최고의 컴파일러다. 구문과 기본적인 라이브러리는 계속해서 디자인되고 당신이 코드를 최고로 작성할수 있게끔 지침으로서 활용될 것이다. 안전성과 빠름의 조합은 Swift를 사용하기에 완벽한 선택으로 만들어 줄것이다.

Swift는 강력한 형식의 추론과 현대적 방면에 결합한 것이다. 가벼운 구문, 복잡한 아이디어라 하더라도 확실하고 간결하게 표현하게 할것이며, 결과적으로 코드는 쓰기 쉽지 않다, 그러나 쉽게 읽을 수 있으며 유지보수가 용이하게 해줄 것이다.

Swift는 몇년에 걸쳐서 만들어지고 있다. 그리고 새로운 특성과 기능으로 계속될것이다. 


2. Version Compatibility(버전 호환)


이 기록은 Swift 4.1 기본 버전이며, Xcode 9.2 버전을 제공하고 있다. 당신은 Xcode 9.2 버전을 통해 대상을 만들 수 있으며, Swift 4나 Swift 3으로 작성 가능하다.

	- NOTE
	Swift3 코드를 4와 함꼐 컴파일 할때, 해당 언어 버전을 3.2로 식별한다, 결과적으로
	당신은 조건적으로 편집이 가능하며 : #if swift(>=3.2) 코드를 적을 수 있으며, 여러
	버전의 Swift의 컴파일러와 호완이 가능하다

Xcode 9.2에서 Swift3로 코드 사용 할 떄, 대부분의 새로운 Swift4의 기능들을 사용할수 있지만, 다음 기능은 오직 Swift 4에서만 쓸수있는 code이다.
    
    a) 서브스트링 연산은 한 인스턴스에 Substring type 대신에 String을 반환한다
    b) @Objc 속성은 암시적으로 소수의 메모리를 할당한다
    c) 상속 타입은 같은 파일 안에서 private 타입 members를 access 할수 있다. (참조 가능하다는 뜻인듯)

어떤 대상에 대해 Swift4에서 작성할때 Swift3에서 대상에 따라 할 수 있다. 그리고 거꾸로 해도 마찬가지이다. 이 말은 만약에 당신이 큰 프로젝트를 진행하고 있을때 버전을 다르게 쪼개서도 진행 할수 있다는 뜻이다.(원 : 다중 프레임 워크로 분리) 한개의 프레임워크일때 Swift 4에서 3으로 코드를 이주할수 있다.

3.A Swift Tour

전통적인 의제로 항상 새로운 언어는 "Hello, world"를 screen에 띄워야 한다. Swift인 경우 이것은 한줄로 가능하다

	: print("Hello, world!")

만약에 코드를 c나 Objective-C로 작성한적 있다면, 이 구문은 당신에게 아주 친숙할 것이다. 이 코드의 라인은 프로그램의 완성이다, 만약에 당신이 분리된 라이브러리의 기능(input/output or string)을 import할 필요가 없다면, 코드는 전역에서 프로그램의 진입점으로 사용될 것이다.

그래서 당신은 main() 기능을 사용할 필요가 없으며, 모든 구문의 마지막에서 ;(세미콜론)을 사용할 필요도 없다.

이 체험은 당신에게 충분한 정보와 Swift를 이용하여 어떻게 하여 다양한 과제를 채울 것인지에 대해 보여줄것이며,만약 어떠한 부분에 있어 이해를 못한다고 해도 걱정할 필요는 없다, 모든 것을 이 체험안에 충분히 자세히 소개하였기때문이다.
	
	- Note
	최고의 경험은, 챕터를 열고 Xcode안에서 노는 것(playground - 프로그램 이중적 표현)이다. 놀이터 안에서는 당신이 코드를 편집하거나 결과를 즉시 볼수 있게끔 동의해줄것이다










